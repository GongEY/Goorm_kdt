echo "hello static nfs" | sudo tee /srv/nfs-volume/index.html # nfs볼륨 생성 = 관리자 영역에 스토리지(nfs) 구축  

apiVersion: v1
kind: PersistentVolume
metadata:
  name: myapp-pv-nfs
spec:
  capacity:
    storage: 1Gi # 용량 설정 
  accessModes: # 접근모드 설정 
    - ReadWriteMany # RWX(= 읽기,쓰기,many)
  persistentVolumeReclaimPolicy: Retain # 반환정책 설정
  nfs:
    path: /srv/nfs-volume # 관리자영역에서 생성한 nfs볼륨 설정 
    server: 192.168.56.11 # 관리자영역 설정
    

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: myapp-pvc-nfs
spec:
  accessModes:
    - ReadWriteMany # 
  resources:
    requests:
      storage: 1Gi # pv가 가진 capacity중 특정 자원만큼 요청 
  volumeName: myapp-pv-nfs # pvc와 pv를 연결(= bind)
  storageClassName: '' # 정적에서는 지정 x 
  
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: myapp-rs-nfs
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp-rs-nfs
  template:
    metadata:
      labels:
        app: myapp-rs-nfs
    spec:
      containers:
      - name: myapp
        image: nginx
        volumeMounts:
        - name: nfs-share # 파드에 볼륨 마운트
          mountPath: /usr/share/nginx/html # 볼륨과 특정 디렉터리 링크
        ports:
        - containerPort: 80
      volumes:
      - name: nfs-share
        persistentVolumeClaim:
          claimName: myapp-pvc-nfs # pvc와 파드 연결 
          
apiVersion: v1
kind: Service
metadata:
  name: myapp-svc-nfs
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: myapp-rs-nfs
